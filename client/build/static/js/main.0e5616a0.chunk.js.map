{"version":3,"sources":["assets/img/react-logo.png","config.js","components/Sidebar/Sidebar.jsx","services/AuthService.js","services/UserService.js","services/api.js","views/login/index.js","store/actions/Auth.js","views/signup/index.js","PrivateRoute.js","views/dashboard/index.js","components/user/UserDetailForm.js","components/user/UserModal.js","views/pendingUsers/index.js","views/updatePassword/index.js","store/actions/User.js","views/updateProfile/index.js","routes.js","layouts/Admin/Admin.jsx","components/Navbars/AdminNavbar.jsx","views/forgot/index.js","views/verify/index.js","App.js","store/reducers/UIState/Test.js","store/reducers/UIState/index.js","store/reducers/AppState/Auth.js","store/reducers/AppState/User.js","store/reducers/AppState/index.js","store/reducers/RootReducer.js","store/index.js","index.js","variables/charts.jsx"],"names":["module","exports","__webpack_require__","p","development","urlObj","require","parse","document","location","href","AppMode","process","REACT_APP_ENV","hostname","indexOf","protocol","baseURL","ps","AuthService","api","Object","classCallCheck","this","body","axios","post","concat","data","headers","Authorization","token","UserService","Api","authToken","demo","arguments","length","undefined","auth","user","Login","props","_this","possibleConstructorReturn","getPrototypeOf","call","handleLogin","asyncToGenerator","regenerator_default","a","mark","_callee","_this$props","history","onLogin","formData","res","wrap","_context","prev","next","state","setState","isDisabled","sent","isVerified","role","push","toast","error","pathname","params","email","comingFrom","stop","handleChange","event","target","name","value","handleForgot","handleSignup","password","_this$state","react_default","createElement","className","reactstrap_es","md","style","margin","lib","onSubmit","label","onChange","type","variant","validators","errorMessages","onClick","cursor","disabled","color","fontWeight","Component","connect","dispatch","_ref2","_callee2","_context2","success","message","abrupt","t0","response","_x2","apply","Signup","goToLogin","e","onRegister","confirmPassword","ValidatorForm","addValidationRule","React","_ref","_x","AppState","Auth","component","rest","objectWithoutProperties","Route","assign","render","Redirect","to","Dashboard","setBgChartData","bigChartData","_this2","xs","sm","tag","data-toggle","classNames","active","id","size","defaultChecked","react_chartjs_2_es","chartExample1","options","lg","chartExample2","chartExample3","chartExample4","UserDetailForm","console","log","userData","editModal","UserModal","isOpen","onClose","_useState","useState","_useState2","slicedToArray","user_UserDetailForm","outline","PendingUsers","openModal","filterMethod","filter","row","column","pivotId","String","toLowerCase","startsWith","getTableProps","rowInfo","col","instance","cb","original","getPendingUsers","columns","Header","accessor","textAlign","Cell","display","createdAt","sortable","filterable","resizable","class","pendingUsers","react_table_6_es","defaultFilterMethod","backgroundColor","minRows","getTdProps","user_UserModal","UpdatePassword","User","handleUpdatePassword","onUpdatePassword","onChangePassword","oldPassword","newPassword","passwordValid","justifyContent","_ref7","_callee7","_context7","_x7","_ref6","_callee6","_context6","_x6","UpdateProfile","handleUpdateProfile","onUpdateProfile","handlePassChange","disabledPass","_ref8","_callee8","_context8","_x8","routes","layout","path","icon","Sidebar","linkOnClick","documentElement","classList","remove","selectedIndex","activeRoute","bind","assertThisInitialized","routeName","navigator","platform","PerfectScrollbar","refs","sidebar","suppressScrollX","suppressScrollY","destroy","bgColor","rtlActive","logo","outterLink","toggleSidebar","src","imgSrc","alt","fontSize","text","Link","innerLink","ref","map","prop","key","pro","NavLink","activeClassName","rtlName","defaultProps","withRouter","AdminNavbar","updateColor","window","innerWidth","collapseOpen","toggleCollapse","toggleModalSearch","modalSearch","handleLogout","localStorage","clear","handleSettings","addEventListener","removeEventListener","expand","fluid","toggled","sidebarOpened","objectFit","width","borderRadius","aria-expanded","aria-label","data-target","navbar","nav","caret","preventDefault","right","divider","modalClassName","toggle","placeholder","data-dismiss","Admin","getRoutes","handleBgClick","getBrandText","i","mainPanel","tables","querySelectorAll","action","scrollTop","scrollingElement","components_Sidebar_Sidebar","Navbars_AdminNavbar","brandText","Switch","ForgotPassword","onForgotPassword","_ref5","_callee5","_context5","_x5","VerifyCode","onSubmitCode","onVerifyCode","handleResend","onResendCode","verificationCode","hidden","_ref3","_callee3","_context3","_x3","_ref4","_callee4","_context4","_x4","hist","createBrowserHistory","App","notify","time","place","autoDismiss","notificationAlert","EventBus","on","react_toastify","dist_default","Router","src_PrivateRoute","layouts_Admin_Admin","exact","views_login","signup","forgot","verify","updatePassword","test","payload","combineReducers","defaultState","getItem","JSON","setItem","stringify","objectSpread","result","appReducer","UIState","rootReducer","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","initialState","createStore","applyMiddleware","thunk","logger","configureStore","ReactDOM","es","src_App_0","getElementById","chart1_2_options","maintainAspectRatio","legend","tooltips","titleFontColor","bodyFontColor","bodySpacing","xPadding","mode","intersect","position","responsive","scales","yAxes","barPercentage","gridLines","drawBorder","zeroLineColor","ticks","suggestedMin","suggestedMax","padding","fontColor","xAxes","data1","canvas","gradientStroke","getContext","createLinearGradient","addColorStop","labels","datasets","fill","borderColor","borderWidth","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","data2","data3","hoverBackgroundColor"],"mappings":"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","file":"static/js/main.0e5616a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react-logo.eb6be414.png\";","const url = require(\"url\");\nconst urlObj = url.parse(document.location.href, true);\nconst AppMode = [process.env.REACT_APP_ENV];\n\nlet development;\nif (urlObj.hostname.indexOf(\"localhost\") != -1) {\n  development = urlObj.protocol + \"//\" + urlObj.hostname + \":1339\";\n} else {\n  development = urlObj.protocol + \"//\" + urlObj.hostname;\n}\n\nconst production = \"\";\n\nlet baseURL = \"\";\nswitch (AppMode[0]) {\n  case \"dev\":\n    baseURL = development;\n    break;\n  case \"pro\":\n    baseURL = production;\n    break;\n  default:\n    baseURL = development;\n}\n\nexport { baseURL };\n","/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink, Link, withRouter } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Nav } from \"reactstrap\";\nimport \"./sidebar.css\";\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedIndex: 0\n    };\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  linkOnClick = () => {\n    document.documentElement.classList.remove(\"nav-open\");\n  };\n\n  selectedIndex = e => {\n    this.setState({ selectedIndex: e });\n  };\n\n  render() {\n    const { bgColor, routes, rtlActive, logo } = this.props;\n    let logoImg = null;\n    let logoText = null;\n    if (logo !== undefined) {\n      if (logo.outterLink !== undefined) {\n        logoImg = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-mini\"\n            target=\"_blank\"\n            onClick={this.props.toggleSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </a>\n        );\n        logoText = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-normal\"\n            target=\"_blank\"\n            onClick={this.props.toggleSidebar}\n            style={{ fontSize: \"24px\" }}\n          >\n            {logo.text}\n          </a>\n        );\n      } else {\n        logoImg = (\n          <Link\n            to={logo.innerLink}\n            className=\"simple-text logo-mini\"\n            onClick={this.props.toggleSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </Link>\n        );\n        logoText = (\n          <Link\n            to={logo.innerLink}\n            className=\"simple-text logo-normal\"\n            onClick={this.props.toggleSidebar}\n          >\n            {logo.text}\n          </Link>\n        );\n      }\n    }\n    return (\n      <div className=\"sidebar\" data={bgColor}>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          {/*logoImg !== null || logoText !== null ? (\n            <div className=\"logo\" style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n\n              {logoText}\n            </div>\n          ) : null*/}\n\n          <Nav>\n            {routes.map((prop, key) => {\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  {prop.name !== \"hidden\" ? (\n                    <NavLink\n                      to={prop.layout + prop.path}\n                      className=\"nav-link\"\n                      activeClassName=\"active\"\n                      onClick={this.props.toggleSidebar}\n                    >\n                      <i className={prop.icon} />\n                      <p style={{ fontSize: \"12px\" }}>\n                        {rtlActive ? prop.rtlName : prop.name}\n                      </p>\n                    </NavLink>\n                  ) : null}\n                </li>\n              );\n            })}\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  rtlActive: false,\n  bgColor: \"blue\",\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  bgColor: PropTypes.oneOf([\"primary\", \"blue\", \"green\"]),\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string\n  })\n};\n\nexport default withRouter(Sidebar);\n","import axios from \"axios\";\nimport { baseURL } from \"../config\";\n\nclass AuthService {\n  constructor(api) {\n    this.api = api;\n  }\n\n  async onRegister(body) {\n    const { data } = await axios.post(`${baseURL}/register`, body);\n    return data;\n  }\n\n  async onLogin(body) {\n    const { data } = await axios.post(`${baseURL}/authenticate`, body);\n    return data;\n  }\n\n  async onVerifyCode(body) {\n    const { data } = await axios.post(`${baseURL}/verifyEmail`, body);\n    return data;\n  }\n\n  async onResendCode(body) {\n    const { data } = await axios.post(`${baseURL}/resendOTP`, body);\n    return data;\n  }\n\n  async onForgotPassword(body) {\n    const { data } = await axios.post(`${baseURL}/forgotPassword`, body);\n    return data;\n  }\n\n  async onUpdatePassword(body) {\n    const headers = {\n      Authorization: this.api.token,\n    };\n    const { data } = await axios.post(`${baseURL}/api/updatePassword`, body, {\n      headers,\n    });\n    return data;\n  }\n\n  async onChangePassword(body) {\n    const headers = {\n      Authorization: this.api.token,\n    };\n    const { data } = await axios.post(`${baseURL}/api/changePassword`, body, {\n      headers,\n    });\n    return data;\n  }\n\n  async onUpdateProfile(body) {\n    const headers = {\n      Authorization: this.api.token,\n    };\n    const { data } = await axios.post(`${baseURL}/api/updateUser`, body, {\n      headers,\n    });\n    return data;\n  }\n}\n\nexport default AuthService;\n","import axios from \"axios\";\nimport { baseURL } from \"../config\";\n\nclass UserService {\n  constructor(api) {\n    this.api = api;\n  }\n\n  async getPendingUsers() {\n    const headers = {\n      Authorization: this.api.token,\n    };\n    const { data } = await axios.post(\n      `${baseURL}/api/get-pending-verification-users`,\n      {},\n      { headers }\n    );\n    return data;\n  }\n}\n\nexport default UserService;\n","import AuthService from \"./AuthService\";\nimport UserService from \"./UserService\";\n\nconst DEMO = false;\n\nexport class Api {\n  constructor(authToken, demo = DEMO) {\n    this.token = authToken;\n    this.demo = demo;\n    this.auth = new AuthService(this, demo);\n    this.user = new UserService(this, demo);\n  }\n}\n\nexport default Api;\n","import { Button, Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport React, { Component } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { onLogin } from \"../../store/actions/Auth\";\nimport { toast } from \"react-toastify\";\n\nimport \"./login.css\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDisabled: false,\n      formData: {\n        email: \"\",\n        password: \"\",\n      },\n    };\n  }\n\n  handleLogin = async () => {\n    const { history, onLogin } = this.props;\n    const { formData } = this.state;\n    this.setState({ isDisabled: true });\n\n    // api for register\n    let res = await onLogin(formData);\n    if (res) {\n      if (res.user.isVerified) {\n        if (res.user.role === \"admin\") {\n          history.push(`/home/dashboard`);\n        } else {\n          toast.error(\"user not authorized\");\n        }\n      } else if (!res.user.isVerified) {\n        toast.error(\"user not verified\");\n        history.push({\n          pathname: \"/verify\",\n          state: { params: res.user.email, comingFrom: \"login\" },\n        });\n      }\n    }\n    this.setState({ isDisabled: false });\n  };\n\n  handleChange = (event) => {\n    const { formData } = this.state;\n    formData[event.target.name] = event.target.value;\n    this.setState({ formData });\n  };\n\n  handleForgot = () => {\n    this.props.history.push(\"/forgot\");\n  };\n\n  handleSignup = () => {\n    this.props.history.push(\"/signup\");\n  };\n\n  render() {\n    const { formData, isDisabled } = this.state;\n    return (\n      <div className=\"form-container\">\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <CardHeader>\n                <p className=\"form-title\">Login</p>\n                <hr style={{ margin: \"0px\" }} />\n              </CardHeader>\n              <CardBody>\n                <ValidatorForm\n                  className=\"validatorForm\"\n                  onSubmit={this.handleLogin}\n                >\n                  <TextValidator\n                    className=\"input-field\"\n                    label=\"Email\"\n                    onChange={this.handleChange}\n                    name=\"email\"\n                    type=\"text\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    validators={[\"required\", \"isEmail\"]}\n                    errorMessages={[\n                      \"Email can not be empty\",\n                      \"Email is not valid\",\n                    ]}\n                    value={formData.email}\n                  />\n\n                  <TextValidator\n                    className=\"input-field\"\n                    label=\"Password\"\n                    onChange={this.handleChange}\n                    name=\"password\"\n                    type=\"password\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    validators={[\"required\"]}\n                    errorMessages={[\"Password can not be empty\"]}\n                    value={formData.password}\n                  />\n\n                  <p onClick={this.handleForgot} style={{ cursor: \"pointer\" }}>\n                    forgot password?\n                  </p>\n                  <hr style={{ margin: \"20px 0px 20px 0px\" }} />\n                  <Button className=\"\" type=\"submit\" disabled={isDisabled}>\n                    {!isDisabled ? (\n                      \"Login\"\n                    ) : (\n                      <i className=\"fa fa-spinner fa-spin fa-1x fa-fw\" />\n                    )}\n                  </Button>\n                  <p className=\"dont-have-acc\">\n                    Don't have an Account?\n                    <span\n                      onClick={this.handleSignup}\n                      style={{\n                        color: \"#344675\",\n                        fontWeight: 600,\n                        cursor: \"pointer\",\n                      }}\n                    >\n                      {\" \"}\n                      Signup\n                    </span>\n                  </p>\n                </ValidatorForm>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\n// const mapStateToProps = (state) =>\n// {\n//   return {\n//     authToken: state.Auth.authToken,\n//   }\n// }\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLogin: (data) => dispatch(onLogin(data)),\n});\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Login);\n","import { Api } from \"../../services/api\";\nimport { toast } from \"react-toastify\";\n\nexport const onRegister = (body) => async (dispatch) => {\n  const api = new Api();\n  try {\n    let res = await api.auth.onRegister(body);\n    dispatch({\n      type: \"ON_REGISTER_SUCCESS\",\n      res,\n    });\n    toast.success(res.message);\n    return res;\n  } catch (error) {\n    dispatch({\n      type: \"ON_REGISTER_ERROR\",\n      error,\n    });\n    toast.error(error.response.data.message);\n  }\n};\n\nexport const onLogin = (body) => async (dispatch) => {\n  const api = new Api();\n  try {\n    let res = await api.auth.onLogin(body);\n    dispatch({\n      type: \"UPDATE_USER_DATA\",\n      res,\n    });\n    if (res.token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        res,\n      });\n    }\n    toast.success(res.message);\n    return res;\n  } catch (error) {\n    dispatch({\n      type: \"ON_LOGIN_ERROR\",\n      error,\n    });\n    toast.error(error.response.data.message);\n  }\n};\n\nexport const onVerifyCode = (body) => async (dispatch) => {\n  const api = new Api();\n  try {\n    let res = await api.auth.onVerifyCode(body);\n    dispatch({\n      type: \"UPDATE_USER_DATA\",\n      res,\n    });\n    if (res.token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        res,\n      });\n    }\n    toast.success(res.message);\n    return res;\n  } catch (error) {\n    dispatch({\n      type: \"ON_CODE_VERIFICATION_ERROR\",\n      error,\n    });\n    toast.error(error.response.data.message);\n  }\n};\n\nexport const onResendCode = (body) => async (dispatch) => {\n  const api = new Api();\n  try {\n    let res = await api.auth.onResendCode(body);\n    dispatch({\n      type: \"ON_RESEND_SUCCESS\",\n      res,\n    });\n    toast.success(res.message);\n    return res;\n  } catch (error) {\n    dispatch({\n      type: \"ON_RESEND_ERROR\",\n      error,\n    });\n    toast.error(error.response.data.message);\n  }\n};\n\nexport const onForgotPassword = (body) => async (dispatch) => {\n  const api = new Api();\n  try {\n    let res = await api.auth.onForgotPassword(body);\n    dispatch({\n      type: \"ON_FORGOT_PASSWORD_SUCCESS\",\n      res,\n    });\n    toast.success(res.message);\n    return res;\n  } catch (error) {\n    dispatch({\n      type: \"ON_FORGOT_PASSWORD_ERROR\",\n      error,\n    });\n    toast.error(error.response.data.message);\n  }\n};\n\nexport const onUpdatePassword = (token, body) => async (dispatch) => {\n  const api = new Api(token);\n  try {\n    let res = await api.auth.onUpdatePassword(body);\n    dispatch({\n      type: \"ON_FORGOT_PASSWORD_SUCCESS\",\n      res,\n    });\n    toast.success(res.message);\n    return res;\n  } catch (error) {\n    dispatch({\n      type: \"ON_FORGOT_PASSWORD_ERROR\",\n      error,\n    });\n    toast.error(error.response.data.message);\n  }\n};\n\nexport const onChangePassword = (token, body) => async (dispatch) => {\n  const api = new Api(token);\n  try {\n    let res = await api.auth.onChangePassword(body);\n    dispatch({\n      type: \"ON_CHANGE_PASSWORD_SUCCESS\",\n      res,\n    });\n    toast.success(res.message);\n    return res;\n  } catch (error) {\n    dispatch({\n      type: \"ON_CHANGE_PASSWORD_ERROR\",\n      error,\n    });\n    toast.error(error.response.data.message);\n  }\n};\n\nexport const onUpdateProfile = (token, body) => async (dispatch) => {\n  const api = new Api(token);\n  try {\n    let res = await api.auth.onUpdateProfile(body);\n    dispatch({\n      type: \"UPDATE_USER_DATA\",\n      res,\n    });\n    toast.success(res.message);\n    return res;\n  } catch (error) {\n    dispatch({\n      type: \"ON_UPDATE_ERROR\",\n      error,\n    });\n    toast.error(error.response.data.message);\n  }\n};\n","import React from \"react\";\n\n// reactstrap components\nimport { Button, Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { connect } from \"react-redux\";\nimport { onRegister } from \"../../store/actions/Auth\";\n\nclass Signup extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isDisabled: false,\n      formData: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n      },\n    };\n  }\n\n  componentDidMount() {\n    const { formData } = this.state;\n    ValidatorForm.addValidationRule(\"isPasswordMatch\", (value) => {\n      if (value !== formData.password) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  goToLogin = (e) => {\n    const { history } = this.props;\n    history.push(\"/login\");\n  };\n\n  handleSignup = async () => {\n    const { history, onRegister } = this.props;\n    const { formData } = this.state;\n    this.setState({ isDisabled: true });\n\n    // api for register\n    let res = await onRegister(formData);\n    if (res) {\n      history.push({\n        pathname: \"/verify\",\n        state: { params: res.user.email, comingFrom: \"login\" },\n      });\n    }\n    this.setState({ isDisabled: false });\n  };\n\n  handleChange = (event) => {\n    const { formData } = this.state;\n    formData[event.target.name] = event.target.value;\n    this.setState({ formData });\n  };\n\n  render() {\n    const { formData, isDisabled } = this.state;\n    return (\n      <div className=\"form-container\">\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <CardHeader>\n                <p className=\"form-title\">Signup</p>\n                <hr style={{ margin: \"0px\" }} />\n              </CardHeader>\n              <CardBody>\n                <ValidatorForm\n                  className=\"validatorForm\"\n                  onSubmit={this.handleSignup}\n                >\n                  <TextValidator\n                    className=\"input-field\"\n                    label=\"Name\"\n                    onChange={this.handleChange}\n                    name=\"name\"\n                    type=\"text\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    validators={[\"required\"]}\n                    errorMessages={[\"Name can not be empty\"]}\n                    value={formData.name}\n                  />\n\n                  <TextValidator\n                    className=\"input-field\"\n                    label=\"Email\"\n                    onChange={this.handleChange}\n                    name=\"email\"\n                    type=\"email\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    validators={[\"required\", \"isEmail\"]}\n                    errorMessages={[\n                      \"Email can not be empty\",\n                      \"Email is not valid\",\n                    ]}\n                    value={formData.email}\n                  />\n\n                  <TextValidator\n                    className=\"input-field\"\n                    label=\"Password\"\n                    onChange={this.handleChange}\n                    name=\"password\"\n                    type=\"password\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    validators={[\"required\"]}\n                    errorMessages={[\"Password can not be empty\"]}\n                    value={formData.password}\n                  />\n\n                  <TextValidator\n                    className=\"input-field\"\n                    label=\"Confirm Password\"\n                    onChange={this.handleChange}\n                    name=\"confirmPassword\"\n                    type=\"password\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    validators={[\"required\", \"isPasswordMatch\"]}\n                    errorMessages={[\n                      \"Confirm Password can not be empty\",\n                      \"Password mismatch\",\n                    ]}\n                    value={formData.confirmPassword}\n                  />\n                  <p className=\"dont-have-acc\">\n                    Already have account?\n                    <span\n                      onClick={this.goToLogin}\n                      style={{\n                        color: \"#344675\",\n                        fontWeight: 600,\n                        cursor: \"pointer\",\n                      }}\n                    >\n                      {\" \"}\n                      Login\n                    </span>\n                  </p>\n\n                  <hr style={{ margin: \"20px 0px 20px 0px\" }} />\n                  <Button className=\"\" type=\"submit\" disabled={isDisabled}>\n                    {!isDisabled ? (\n                      \"Signup\"\n                    ) : (\n                      <i className=\"fa fa-spinner fa-spin fa-1x fa-fw\" />\n                    )}\n                  </Button>\n                </ValidatorForm>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\n// const mapStateToProps = (state) =>\n// {\n//   return {\n//     authToken: state.Auth.authToken,\n//   }\n// }\n\nconst mapDispatchToProps = (dispatch) => ({\n  onRegister: (data) => dispatch(onRegister(data)),\n});\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Signup);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, authToken, ...rest }) => (\n  <Route\n    {...rest}\n    render=\n    {\n      props=> authToken ? ( <Component {...props} /> ) : ( <Redirect to=\"/\" /> )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  authToken: state.AppState.Auth.token\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n\n// reactstrap components\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartExample1,\n  chartExample2,\n  chartExample3,\n  chartExample4\n} from \"variables/charts.jsx\";\nimport \"./dashboard.css\";\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bigChartData: \"data1\"\n    };\n  }\n  setBgChartData = name => {\n    this.setState({\n      bigChartData: name\n    });\n  };\n  render() {\n    return (\n      <div className=\"content\">\n        <Row>\n          <Col xs=\"12\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <Row>\n                  <Col className=\"text-left\" sm=\"6\">\n                    <h5 className=\"card-category\">Total Shipments</h5>\n                    <CardTitle tag=\"h2\">Performance</CardTitle>\n                  </Col>\n                  <Col sm=\"6\">\n                    <ButtonGroup\n                      className=\"btn-group-toggle float-right\"\n                      data-toggle=\"buttons\"\n                    >\n                      <Button\n                        tag=\"label\"\n                        className={classNames(\"btn-simple\", {\n                          active: this.state.bigChartData === \"data1\"\n                        })}\n                        color=\"info\"\n                        id=\"0\"\n                        size=\"sm\"\n                        onClick={() => this.setBgChartData(\"data1\")}\n                      >\n                        <input\n                          defaultChecked\n                          className=\"d-none\"\n                          name=\"options\"\n                          type=\"radio\"\n                        />\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                          Accounts\n                        </span>\n                        <span className=\"d-block d-sm-none\">\n                          <i className=\"tim-icons icon-single-02\" />\n                        </span>\n                      </Button>\n                      <Button\n                        color=\"info\"\n                        id=\"1\"\n                        size=\"sm\"\n                        tag=\"label\"\n                        className={classNames(\"btn-simple\", {\n                          active: this.state.bigChartData === \"data2\"\n                        })}\n                        onClick={() => this.setBgChartData(\"data2\")}\n                      >\n                        <input className=\"d-none\" name=\"options\" type=\"radio\" />\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                          Purchases\n                        </span>\n                        <span className=\"d-block d-sm-none\">\n                          <i className=\"tim-icons icon-gift-2\" />\n                        </span>\n                      </Button>\n                      <Button\n                        color=\"info\"\n                        id=\"2\"\n                        size=\"sm\"\n                        tag=\"label\"\n                        className={classNames(\"btn-simple\", {\n                          active: this.state.bigChartData === \"data3\"\n                        })}\n                        onClick={() => this.setBgChartData(\"data3\")}\n                      >\n                        <input className=\"d-none\" name=\"options\" type=\"radio\" />\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                          Sessions\n                        </span>\n                        <span className=\"d-block d-sm-none\">\n                          <i className=\"tim-icons icon-tap-02\" />\n                        </span>\n                      </Button>\n                    </ButtonGroup>\n                  </Col>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Line\n                    data={chartExample1[this.state.bigChartData]}\n                    options={chartExample1.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col lg=\"4\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <h5 className=\"card-category\">Total Shipments</h5>\n                <CardTitle tag=\"h3\">\n                  <i className=\"tim-icons icon-bell-55 text-info\" /> 763,215\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Line\n                    data={chartExample2.data}\n                    options={chartExample2.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg=\"4\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <h5 className=\"card-category\">Daily Sales</h5>\n                <CardTitle tag=\"h3\">\n                  <i className=\"tim-icons icon-delivery-fast text-primary\" />{\" \"}\n                  3,500€\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Bar\n                    data={chartExample3.data}\n                    options={chartExample3.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg=\"4\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <h5 className=\"card-category\">Completed Tasks</h5>\n                <CardTitle tag=\"h3\">\n                  <i className=\"tim-icons icon-send text-success\" /> 12,100K\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Line\n                    data={chartExample4.data}\n                    options={chartExample4.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\nexport default Dashboard;\n","import React from \"react\";\n\n// reactstrap components\nimport { Button, Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { connect } from \"react-redux\";\nimport { onRegister } from \"../../store/actions/Auth\";\n\nclass UserDetailForm extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(\"userData :: \", props);\n    this.state = {\n      isDisabled: false,\n      formData: {\n        name: props.userData.name,\n        email: props.userData.email,\n      },\n    };\n  }\n\n  handleChange = (event) => {\n    const { formData } = this.state;\n    formData[event.target.name] = event.target.value;\n    this.setState({ formData });\n  };\n\n  render() {\n    const { formData, isDisabled } = this.state;\n    const { editModal } = this.props;\n    \n    return (\n      <Row>\n        <Col md=\"12\">\n          <Card>\n            <CardBody>\n              <ValidatorForm\n                className=\"validatorForm\"\n                onSubmit={this.handleSignup}\n              >\n                <TextValidator\n                  className=\"input-field\"\n                  label=\"Name\"\n                  disabled={!editModal}\n                  onChange={this.handleChange}\n                  name=\"name\"\n                  type=\"text\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  validators={[\"required\"]}\n                  errorMessages={[\"Name can not be empty\"]}\n                  value={formData.name}\n                />\n\n                <TextValidator\n                  className=\"input-field\"\n                  label=\"Email\"\n                  disabled={!editModal}\n                  onChange={this.handleChange}\n                  name=\"email\"\n                  type=\"email\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  validators={[\"required\", \"isEmail\"]}\n                  errorMessages={[\n                    \"Email can not be empty\",\n                    \"Email is not valid\",\n                  ]}\n                  value={formData.email}\n                />\n              </ValidatorForm>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n\n// const mapStateToProps = (state) =>\n// {\n//   return {\n//     authToken: state.Auth.authToken,\n//   }\n// }\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onRegister: (data) => dispatch(onRegister(data)),\n// });\nexport default connect(\n  null,\n  null\n)(UserDetailForm);\n","import React, { useState } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport UserDetailForm from \"./UserDetailForm\";\n\nconst UserModal = ({ userData, isOpen, onClose }) => {\n  const [editModal, setEditModal] = useState(false);\n  return (\n    <Modal isOpen={isOpen}>\n      <ModalHeader>User Detail</ModalHeader>\n      <ModalBody>\n        <UserDetailForm editModal={editModal} userData={userData} />\n      </ModalBody>\n      <ModalFooter>\n        <Button outline onClick={onClose}>\n          Close\n        </Button>\n        {/* <Button color=\"primary\" onClick={onConfirm}>Add User</Button> */}\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default UserModal;\n","import React from \"react\";\nimport \"./table.css\";\nimport ReactTable from \"react-table-6\";\nimport { Button, Modal } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getPendingUsers } from \"../../store/actions/User\";\nimport UserModal from \"../../components/user/UserModal.js\";\n\nclass PendingUsers extends React.Component {\n  state = {\n    userData: \"\",\n    openModal: false,\n  };\n\n  async componentDidMount() {\n    const { getPendingUsers, token } = this.props;\n    await getPendingUsers(token);\n  }\n\n  filterMethod = (filter, row, column) => {\n    const id = filter.pivotId || filter.id;\n    return row[id] !== undefined\n      ? String(row[id].toLowerCase()).startsWith(filter.value.toLowerCase())\n      : true;\n  };\n\n  getTableProps = (state, rowInfo, col, instance) => ({\n    onClick: (e, cb) => {\n      if (rowInfo !== undefined) {\n        console.log(\"rowData\", rowInfo.original);\n      }\n    },\n  });\n\n  render() {\n    const columns = [\n      {\n        Header: \"Name\",\n        accessor: \"name\",\n        style: { textAlign: \"center\" },\n      },\n      {\n        Header: \"Email\",\n        accessor: \"email\",\n        style: { textAlign: \"center\" },\n      },\n      {\n        Header: \"Type\",\n        accessor: \"type\",\n        style: { textAlign: \"center\" },\n      },\n      {\n        Header: \"Created At\",\n        accessor: \"createdAt\",\n        style: { textAlign: \"center\" },\n        Cell: (props) => {\n          return (\n            <span style={{ display: \"flex\" }}>{props.original.createdAt}</span>\n          );\n        },\n      },\n      {\n        Header: \"Actions\",\n        // width: 180,\n        // minWidth: 120,\n        // maxWidth: 250,\n        sortable: false,\n        filterable: false,\n        resizable: false,\n        Cell: (props) => {\n          return (\n            <span>\n              <Button>\n                <i class=\"tim-icons icon-check-2\"></i>\n              </Button>\n              <Button\n                onClick={() => {\n                  this.setState({ userData: props.original, openModal: true });\n                }}\n              >\n                <i class=\"tim-icons icon-badge\"></i>\n              </Button>\n            </span>\n          );\n        },\n      },\n    ];\n\n    const { pendingUsers } = this.props;\n    const { userData, openModal } = this.state;\n\n    return (\n      <div className=\"content\">\n        <ReactTable\n          data={pendingUsers}\n          columns={columns}\n          defaultFilterMethod={this.filterMethod}\n          filterable\n          style={{ backgroundColor: \"white\" }}\n          minRows={8}\n          getTdProps={this.getTableProps}\n        />\n        <UserModal\n          isOpen={openModal}\n          onClose={() => this.setState({ openModal: false })}\n          userData={userData}\n        />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    token: state.AppState.Auth.token,\n    pendingUsers: state.AppState.User.pendingUsers,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getPendingUsers: (data) => dispatch(getPendingUsers(data)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PendingUsers);\n","import React from \"react\";\nimport { Button, Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { connect } from \"react-redux\";\nimport { onChangePassword, onUpdatePassword } from \"../../store/actions/Auth\";\nclass UpdatePassword extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDisabled: false,\n      formData: {\n        oldPassword: \"\",\n        newPassword: \"\",\n        // user_id: this.props.match.params.id,\n        // code: this.props.match.params.code,\n      },\n      passwordValid: true,\n    };\n    this.comingFrom =\n      (props.location.state && props.location.state.comingFrom) || \"\";\n    if (this.comingFrom === \"settings\") {\n      this.token = props.token;\n    } else {\n      if (props.location.state && props.location.state.params === undefined) {\n        props.history.push(`/login`);\n      } else {\n        this.token = props.location.state.params;\n      }\n    }\n  }\n\n  componentDidMount() {\n    const { formData } = this.state;\n    ValidatorForm.addValidationRule(\"isPasswordMatch\", (value) => {\n      if (value !== formData.newPassword) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  handleChange = (event) => {\n    const { formData } = this.state;\n    formData[event.target.name] = event.target.value;\n    this.setState({ formData });\n  };\n\n  handleUpdatePassword = async () => {\n    const { history, onUpdatePassword, onChangePassword } = this.props;\n    const { formData } = this.state;\n    this.setState({ isDisabled: true });\n    if (this.comingFrom === \"verify\") {\n      formData[\"resetPassword\"] = true;\n    }\n    // api for code verification\n\n    if (this.comingFrom === \"settings\") {\n      await onChangePassword(this.token, formData);\n    } else {\n      let res = await onUpdatePassword(this.token, formData);\n      if (res) {\n        history.push(`/login`);\n      }\n    }\n    this.setState({ isDisabled: false });\n  };\n\n  render() {\n    const { formData, isDisabled } = this.state;\n    return (\n      <div\n        className={this.comingFrom === \"verify\" ? \"form-container\" : \"content\"}\n      >\n        <Row style={{ justifyContent: \"center\" }}>\n          <Col md={this.comingFrom === \"verify\" ? \"12\" : \"6\"}>\n            <Card>\n              <CardHeader>\n                <p className=\"form-title\">Update Password</p>\n                <hr style={{ margin: \"0px\" }} />\n              </CardHeader>\n              <CardBody>\n                <ValidatorForm\n                  className=\"validatorForm\"\n                  onSubmit={this.handleUpdatePassword}\n                >\n                  {this.comingFrom === \"settings\" && (\n                    <TextValidator\n                      className=\"input-field\"\n                      label=\"Old Password\"\n                      onChange={this.handleChange}\n                      name=\"oldPassword\"\n                      type=\"password\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      validators={[\"required\"]}\n                      errorMessages={[\"Password can not be empty\"]}\n                      value={formData.oldPassword}\n                    />\n                  )}\n                  <TextValidator\n                    className=\"input-field\"\n                    label=\"New Password\"\n                    onChange={this.handleChange}\n                    name=\"newPassword\"\n                    type=\"password\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    validators={[\"required\"]}\n                    errorMessages={[\"Password can not be empty\"]}\n                    value={formData.newPassword}\n                  />\n\n                  <TextValidator\n                    className=\"input-field\"\n                    label=\"Confirm Password\"\n                    onChange={this.handleChange}\n                    name=\"confirmPassword\"\n                    type=\"password\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    validators={[\"required\", \"isPasswordMatch\"]}\n                    errorMessages={[\n                      \"Confirm Password can not be empty\",\n                      \"Password mismatch\",\n                    ]}\n                    value={formData.confirmPassword}\n                  />\n\n                  {this.comingFrom !== \"verify\" &&\n                  this.comingFrom !== \"settings\" ? (\n                    <p\n                      onClick={this.handleForgot}\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      forgot password?\n                    </p>\n                  ) : null}\n                  <hr style={{ margin: \"20px 0px 20px 0px\" }} />\n                  <Button className=\"\" type=\"submit\" disabled={isDisabled}>\n                    {!isDisabled ? (\n                      \"Update\"\n                    ) : (\n                      <i className=\"fa fa-spinner fa-spin fa-1x fa-fw\" />\n                    )}\n                  </Button>\n                  {/* <p className=\"dont-have-acc\">\n                    Don't have an Account?\n                    <span\n                      onClick={this.handleSignup}\n                      style={{\n                        color: \"#344675\",\n                        fontWeight: 600,\n                        cursor: \"pointer\",\n                      }}\n                    >\n                      {\" \"}\n                      Update\n                    </span>\n                  </p> */}\n                </ValidatorForm>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChangePassword: (token, data) => dispatch(onChangePassword(token, data)),\n  onUpdatePassword: (token, data) => dispatch(onUpdatePassword(token, data)),\n});\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.AppState.Auth.token,\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UpdatePassword);\n","import { Api } from \"../../services/api\";\nimport { toast } from \"react-toastify\";\n\nexport const getPendingUsers = (token) => async (dispatch) => {\n  const api = new Api(token);\n  try {\n    let res = await api.user.getPendingUsers();\n    dispatch({\n      type: \"GET_PENDING_USER_SUCCESS\",\n      res,\n    });\n    return res;\n  } catch (error) {\n    dispatch({\n      type: \"GET_PENDING_USER_ERROR\",\n      error,\n    });\n    toast.error(error.response.data.message);\n  }\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n// reactstrap components\nimport { Button, Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { onUpdateProfile } from \"../../store/actions/Auth\";\n\nclass UpdateProfile extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isDisabled: false,\n      formData: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n      },\n    };\n  }\n\n  componentDidMount() {\n    const { userData } = this.props;\n    const { formData } = this.state;\n    ValidatorForm.addValidationRule(\"isPasswordMatch\", (value) => {\n      if (value !== formData.password) {\n        return false;\n      }\n      return true;\n    });\n\n    formData[\"name\"] = userData.name;\n    formData[\"email\"] = userData.email;\n\n    this.setState({ formData });\n  }\n\n  goToLogin = (e) => {\n    this.props.history.push(\"/login\");\n  };\n\n  onSubmit = () => {\n    console.log(\"submit clicked\");\n  };\n\n  handleUpdateProfile = async () => {\n    const { onUpdateProfile, token } = this.props;\n    const { formData } = this.state;\n    this.setState({ isDisabled: true });\n    await onUpdateProfile(token, formData);\n    this.setState({ isDisabled: false });\n  };\n\n  handlePassChange = () => {\n    const { history } = this.props;\n    // api for pass change\n    history.push({\n      pathname: \"/home/update-password\",\n      state: { comingFrom: \"settings\" },\n    });\n  };\n\n  handleChange = (event) => {\n    const { formData } = this.state;\n    formData[event.target.name] = event.target.value;\n    this.setState({ formData });\n  };\n\n  render() {\n    const { formData, isDisabled, disabledPass } = this.state;\n    return (\n      <div className=\"content\">\n        <Row style={{ justifyContent: \"center\" }}>\n          <Col md=\"6\">\n            <Card>\n              <CardHeader>\n                <p className=\"form-title\">Update Profile</p>\n                <hr style={{ margin: \"0px\" }} />\n              </CardHeader>\n              <CardBody>\n                <ValidatorForm\n                  className=\"validatorForm\"\n                  onSubmit={this.handleUpdateProfile}\n                >\n                  <TextValidator\n                    className=\"input-field\"\n                    label=\"Name\"\n                    onChange={this.handleChange}\n                    name=\"name\"\n                    type=\"text\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    validators={[\"required\"]}\n                    errorMessages={[\"Name can not be empty\"]}\n                    value={formData.name}\n                  />\n\n                  <TextValidator\n                    className=\"input-field\"\n                    disabled\n                    label=\"Email\"\n                    onChange={this.handleChange}\n                    name=\"email\"\n                    type=\"text\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    validators={[\"required\", \"isEmail\"]}\n                    errorMessages={[\n                      \"Email can not be empty\",\n                      \"Email is not valid\",\n                    ]}\n                    value={formData.email}\n                  />\n                  <hr style={{ margin: \"20px 0px 20px 0px\" }} />\n                  <Button className=\"\" type=\"submit\" disabled={isDisabled}>\n                    {!isDisabled ? (\n                      \"Update\"\n                    ) : (\n                      <i className=\"fa fa-spinner fa-spin fa-1x fa-fw\" />\n                    )}\n                  </Button>\n                  <div />\n                  <Button\n                    className=\"\"\n                    onClick={this.handlePassChange}\n                    disabled={disabledPass}\n                  >\n                    {!disabledPass ? (\n                      \"Change Password\"\n                    ) : (\n                      <i className=\"fa fa-spinner fa-spin fa-1x fa-fw\" />\n                    )}\n                  </Button>\n                </ValidatorForm>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.AppState.Auth.token,\n    userData: state.AppState.Auth.userData,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUpdateProfile: (token, data) => dispatch(onUpdateProfile(token, data)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UpdateProfile);\n","\nimport Dashboard from \"views/dashboard\";\nimport PendingUsers from \"views/pendingUsers\";\nimport UpdatePassword from \"views/updatePassword\";\nimport UpdateProfile from \"views/updateProfile\";\nvar routes = [\n  {\n    layout: \"/home\",\n    name: \"Dashboard\",\n    path: \"/dashboard\",\n    component: Dashboard,\n    icon: \"tim-icons icon-chart-pie-36\",\n  },\n  // {\n  //   layout: \"/home\",\n  //   name: \"Pending Users\",\n  //   path: \"/table\",\n  //   component: PendingUsers,\n  //   icon: \"tim-icons icon-chart-pie-36\",\n  // },\n  {\n    layout: \"/home\",\n    name: 'hidden',\n    path: \"/update-password\",\n    component: UpdatePassword,\n    icon: \"tim-icons icon-chart-pie-36\",\n  },\n  {\n    layout: \"/home\",\n    name: 'hidden',\n    path: \"/settings\",\n    component: UpdateProfile,\n    icon: \"tim-icons icon-chart-pie-36\",\n  },\n];\nexport default routes;\n","import routes from \"routes.js\";\nimport React, { Component } from \"react\";\nimport logo from \"assets/img/react-logo.png\";\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport AdminNavbar from \"components/Navbars/AdminNavbar.jsx\";\nimport { Route, Switch } from \"react-router-dom\";\n\nvar ps;\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: \"blue\",\n      sidebarOpened:\n        document.documentElement.className.indexOf(\"nav-open\") !== -1\n    };\n  }\n\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(this.refs.mainPanel, { suppressScrollX: true });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++)\n        ps = new PerfectScrollbar(tables[i]);\n    }\n  }\n\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.documentElement.className += \" perfect-scrollbar-off\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n    }\n  }\n\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        let tables = document.querySelectorAll(\".table-responsive\");\n        for (let i = 0; i < tables.length; i++)\n          ps = new PerfectScrollbar(tables[i]);\n      }\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n\n  // this function opens and closes the sidebar on small devices\n  toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.setState({ sidebarOpened: !this.state.sidebarOpened });\n  };\n\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/home\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else return null;\n    });\n  };\n\n  handleBgClick = color => this.setState({ backgroundColor: color });\n\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      )\n        return routes[i].name;\n    }\n    return \"Brand\";\n  };\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          bgColor={this.state.backgroundColor}\n          logo={{\n            outterLink: \"\",\n            text: \"Dashboard\",\n            imgSrc: logo\n          }}\n          toggleSidebar={this.toggleSidebar}\n        />\n        <div\n          className=\"main-panel\"\n          ref=\"mainPanel\"\n          data={this.state.backgroundColor}\n        >\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n            toggleSidebar={this.toggleSidebar}\n            sidebarOpened={this.state.sidebarOpened}\n          />\n          <Switch>{this.getRoutes(routes)}</Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Admin;\n","import classNames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport React, { Component } from \"react\";\n\n// reactstrap components\nimport {\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Input,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Modal\n} from \"reactstrap\";\n\n// import {logout} from \"../../store/actions/Auth\";\n\nclass AdminNavbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapseOpen: false,\n      modalSearch: false,\n      color: \"navbar-transparent\"\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateColor);\n  }\n\n  updateColor = () => {\n    if (window.innerWidth < 993 && this.state.collapseOpen)\n      this.setState({ color: \"bg-white\" });\n    else this.setState({ color: \"navbar-transparent\" });\n  };\n\n  toggleCollapse = () => {\n    if (this.state.collapseOpen) this.setState({ color: \"navbar-transparent\" });\n    else this.setState({ color: \"bg-white\" });\n    this.setState({ collapseOpen: !this.state.collapseOpen });\n  };\n\n  toggleModalSearch = () =>\n    this.setState({ modalSearch: !this.state.modalSearch });\n\n  handleLogout = () => {\n    localStorage.clear()\n    this.props.history.push(\"/login\");\n  };\n\n  handleSettings = () => {\n    this.props.history.push(\"/home/settings\");\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar\n          className={classNames(\"navbar-absolute\", this.state.color)}\n          expand=\"lg\"\n        >\n          <Container fluid>\n            <div className=\"navbar-wrapper\">\n              <div\n                className={classNames(\"navbar-toggle d-inline\", {\n                  toggled: this.props.sidebarOpened\n                })}\n              >\n                <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  onClick={this.props.toggleSidebar}\n                >\n                  <span className=\"navbar-toggler-bar bar1\" />\n                  <span className=\"navbar-toggler-bar bar2\" />\n                  <span className=\"navbar-toggler-bar bar3\" />\n                </button>\n              </div>\n              <NavbarBrand onClick={e => this.props.history.push('/home/dashboard')}>\n                <img\n                  style={{\n                    objectFit: \"scale-down\",\n                    width: \"50%\",\n                    borderRadius: \"50%\"\n                  }}\n                  alt=\"...\"\n                  src={\"/favicon.png\"}\n                />\n              </NavbarBrand>\n            </div>\n            <button\n              aria-expanded={false}\n              aria-label=\"Toggle navigation\"\n              className=\"navbar-toggler\"\n              data-target=\"#navigation\"\n              data-toggle=\"collapse\"\n              id=\"navigation\"\n              type=\"button\"\n              onClick={this.toggleCollapse}\n            >\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n            </button>\n            <Collapse navbar isOpen={this.state.collapseOpen}>\n              <Nav className=\"ml-auto\" navbar>\n                <UncontrolledDropdown nav>\n                  <DropdownToggle\n                    caret\n                    color=\"default\"\n                    data-toggle=\"dropdown\"\n                    nav\n                    onClick={e => e.preventDefault()}\n                  >\n                    <div className=\"photo\">\n                      <img alt=\"...\" src=\"/favicon.png\" />\n                    </div>\n                    <b className=\"caret d-none d-lg-block d-xl-block\" />\n                    <p className=\"d-lg-none\">Log out</p>\n                  </DropdownToggle>\n                  <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\" onClick={this.handleSettings}>\n                        Profile Settings\n                      </DropdownItem>\n                    </NavLink>\n                    <DropdownItem divider tag=\"li\" />\n                    <NavLink tag=\"li\">\n                      <DropdownItem\n                        className=\"nav-item\"\n                        onClick={this.handleLogout}\n                      >\n                        Log out\n                      </DropdownItem>\n                    </NavLink>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <li className=\"separator d-lg-none\" />\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n        <Modal\n          modalClassName=\"modal-search\"\n          isOpen={this.state.modalSearch}\n          toggle={this.toggleModalSearch}\n        >\n          <div className=\"modal-header\">\n            <Input id=\"inlineFormInputGroup\" placeholder=\"SEARCH\" type=\"text\" />\n            <button\n              aria-label=\"Close\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              type=\"button\"\n              onClick={this.toggleModalSearch}\n            >\n              <i className=\"tim-icons icon-simple-remove\" />\n            </button>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\n// const mapDispatchToProps = {logout};\n\nexport default connect(null, null)(AdminNavbar);\n","import React from \"react\";\nimport { Button, Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { onForgotPassword } from \"../../store/actions/Auth\";\nimport { connect } from \"react-redux\";\n\nclass ForgotPassword extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      formData: {\n        email: \"\",\n      },\n      isDisabled: false,\n    };\n  }\n\n  handleChange = (event) => {\n    const { formData } = this.state;\n    formData[event.target.name] = event.target.value;\n    this.setState({ formData });\n  };\n\n  handleForgot = async () => {\n    const { history, onForgotPassword } = this.props;\n    const { formData } = this.state;\n    this.setState({ isDisabled: true });\n\n    // api for code verification\n    let res = await onForgotPassword(formData);\n    if (res) {\n      history.push({\n        pathname: \"/verify\",\n        state: { params: res.user.email, comingFrom: \"forgot\" },\n      });\n    }\n    this.setState({ isDisabled: false });\n  };\n\n  render() {\n    const { formData, isDisabled } = this.state;\n    return (\n      <div className=\"form-container\">\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <CardHeader>\n                <p className=\"form-title\">Enter Email</p>\n                <hr style={{ margin: \"0px\" }} />\n              </CardHeader>\n              <CardBody>\n                <ValidatorForm\n                  className=\"validatorForm\"\n                  onSubmit={this.handleForgot}\n                >\n                  <TextValidator\n                    className=\"input-field\"\n                    label=\"Email\"\n                    onChange={this.handleChange}\n                    name=\"email\"\n                    type=\"text\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    validators={[\"required\", \"isEmail\"]}\n                    errorMessages={[\n                      \"Email can not be empty\",\n                      \"Email is not valid\",\n                    ]}\n                    value={formData.email}\n                  />\n                  <hr style={{ margin: \"20px 0px 20px 0px\" }} />\n                  <Button className=\"\" type=\"submit\" disabled={isDisabled}>\n                    {!isDisabled ? (\n                      \"Send\"\n                    ) : (\n                      <i className=\"fa fa-spinner fa-spin fa-1x fa-fw\" />\n                    )}\n                  </Button>\n                </ValidatorForm>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onForgotPassword: (data) => dispatch(onForgotPassword(data)),\n});\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ForgotPassword);\n","import React from \"react\";\nimport { Button, Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { onVerifyCode, onResendCode } from \"../../store/actions/Auth\";\n\nclass VerifyCode extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formData: {\n        email: (props.location.state && props.location.state.params) || \"\",\n        verificationCode: \"\",\n      },\n      isDisabled: false,\n    };\n    console.log(\"props.location :: \", props.location);\n    this.comingFrom = props.location.state && props.location.state.comingFrom;\n  }\n\n  handleChange = (event) => {\n    const { formData } = this.state;\n    formData[event.target.name] = event.target.value;\n    this.setState({ formData });\n  };\n\n  onSubmitCode = async () => {\n    const { history, onVerifyCode } = this.props;\n    const { formData } = this.state;\n    this.setState({ isDisabled: true });\n\n    // api for code verification\n    let res = await onVerifyCode(formData);\n    if (res) {\n      if (this.comingFrom === \"login\") {\n        history.push(`/login`);\n      } else {\n        history.push({\n          pathname: \"/update-password\",\n          state: { params: res.token, comingFrom: \"verify\" },\n        });\n      }\n    }\n    this.setState({ isDisabled: false });\n  };\n\n  handleResend = async () => {\n    const { formData } = this.state;\n    const {onResendCode} = this.props\n    this.setState({ isDisabled: true });\n    let res = await onResendCode(formData);\n    this.setState({ isDisabled: false });\n  }\n\n  render() {\n    const { formData, isDisabled } = this.state;\n    return (\n      <div className=\"form-container\">\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <CardHeader>\n                <p className=\"form-title\">Enter Code</p>\n                <hr style={{ margin: \"0px\" }} />\n              </CardHeader>\n              <CardBody>\n                <ValidatorForm\n                  className=\"validatorForm\"\n                  onSubmit={this.onSubmitCode}\n                >\n                  <TextValidator\n                    className=\"input-field\"\n                    label=\"Email\"\n                    onChange={this.handleChange}\n                    name=\"code\"\n                    type=\"text\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    disabled\n                    value={formData.email}\n                  />\n                  <TextValidator\n                    className=\"input-field\"\n                    label=\"Code\"\n                    onChange={this.handleChange}\n                    name=\"verificationCode\"\n                    type=\"text\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    validators={[\"required\"]}\n                    errorMessages={[\"Code can not be empty\"]}\n                    value={formData.verificationCode}\n                  />\n                  <p\n                    hidden={isDisabled}\n                      onClick={this.handleResend}\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      Resend Code\n                    </p>\n                  <hr style={{ margin: \"20px 0px 20px 0px\" }} />\n                  <Button className=\"\" type=\"submit\" disabled={isDisabled}>\n                    {!isDisabled ? (\n                      \"Send\"\n                    ) : (\n                      <i className=\"fa fa-spinner fa-spin fa-1x fa-fw\" />\n                    )}\n                  </Button>\n                </ValidatorForm>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onVerifyCode: (data) => dispatch(onVerifyCode(data)),\n  onResendCode: (data) => dispatch(onResendCode(data)),\n});\nexport default connect(\n  null,\n  mapDispatchToProps\n)(VerifyCode);\n","\nimport {connect} from \"react-redux\";\nimport EventBus from 'eventing-bus';\nimport React, {Component} from \"react\";\nimport Login from \"views/login\";\nimport Signup from \"views/signup\";\nimport PrivateRoute from './PrivateRoute';\nimport {createBrowserHistory} from \"history\";\nimport AdminLayout from \"layouts/Admin/Admin.jsx\";\nimport {ToastContainer, toast} from 'react-toastify';\nimport Dashboard from \"views/dashboard\";\nimport NotificationAlert from \"react-notification-alert\";\nimport {Router, Route, Switch, Redirect} from \"react-router-dom\";\n\nimport ForgotPassword from \"./views/forgot\";\nimport VerifyCode from \"./views/verify\";\n\nimport './App.css';\nimport './views/forms.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport UpdatePassword from \"./views/updatePassword\";\n\nconst hist = createBrowserHistory();\n\nclass App extends Component \n{\n  notify = ({auth, message}) => {\n    var type;\n    var time;\n    if(auth)\n    {\n      type=\"success\";\n      time=5\n    }\n    else {\n      type=\"danger\"\n      time=7\n    }\n\n    var options = {};\n    options = {\n      place: \"tc\",\n      message: (\n            <div>\n              {message}\n            </div>\n      ),\n      type: type,\n      icon: \"tim-icons icon-bell-55\",\n      autoDismiss: time\n    };\n    this.refs.notificationAlert.notificationAlert(options);\n  };\n\n  componentDidMount()\n  {\n    EventBus.on(\"handleAlert\", this.notify);\n  }\n\n  render()\n  {\n    return(\n      <div>\n        <ToastContainer />\n        <div className=\"react-notification-alert-container\">\n          <NotificationAlert ref=\"notificationAlert\" />\n        </div>\n        <Router history={hist}>\n          <Switch>\n            <PrivateRoute path=\"/home\" component={props => <AdminLayout {...props} />} />\n            <Route exact path=\"/login\" component={props => <Login {...props} />}/>\n            <Route exact path=\"/signup\" component={props => <Signup {...props} />}/>\n            <Route exact path=\"/forgot\" component={props => <ForgotPassword {...props} />}/>\n            <Route exact path=\"/verify\" component={props => <VerifyCode {...props} />}/>\n            <Route exact path=\"/update-password\" component={props => <UpdatePassword {...props} />}/>\n            <Route component={props => <Login {...props} />} />\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const defaultState = null;\nconst test = (state = defaultState, action) => {\n  switch (action.type) {\n    case \"TEST-UI\": {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default test;\n","import { combineReducers } from \"redux\";\nimport test from \"./Test\";\nexport default combineReducers({\n  test,\n});\n","const defaultState = {\n  token: localStorage.getItem(\"token\"),\n  userData: JSON.parse(localStorage.getItem(\"userData\")),\n};\n\nconst auth = (state = defaultState, action) => {\n  switch (action.type) {\n    case \"ON_REGISTER_SUCCESS\": {\n      return state;\n    }\n    case \"UPDATE_USER_DATA\": {\n      localStorage.setItem(\"userData\", JSON.stringify(action.res.user));\n      return {\n        ...state,\n        userData: action.res.user,\n      };\n    }\n    case 'SET_TOKEN':{\n      localStorage.setItem(\"token\", action.res.token);\n      return {\n        ...state,\n        token: action.res.token,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","const defaultState = {\n  pendingUsers: [],\n};\n\nconst user = (state = defaultState, action) => {\n  switch (action.type) {\n    case \"GET_PENDING_USER_SUCCESS\": {\n      return {\n        ...state,\n        pendingUsers: action.res.result,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default user;\n","import { combineReducers } from \"redux\";\nimport Auth from \"./Auth.js\";\nimport User from \"./User.js\";\nexport default combineReducers({\n  Auth,\n  User\n});\n","import { combineReducers } from \"redux\";\nimport UIState from \"./UIState\";\nimport AppState from \"./AppState\";\n\nconst appReducer = combineReducers({\n  UIState,\n  AppState,\n});\n\nconst rootReducer = (state, action) => {\n  return appReducer(state, action);\n};\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./reducers/RootReducer\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore(initialState = {}) {\n  return createStore(\n    rootReducer,\n    initialState,\n    composeEnhancer(applyMiddleware(thunk), applyMiddleware(logger))\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport configureStore from \"./store\";\nimport { Provider } from \"react-redux\";\n\nimport \"assets/scss/black-dashboard-react.scss\";\nimport \"assets/demo/demo.css\";\nimport \"assets/css/nucleo-icons.css\";\nimport 'react-table-6/react-table.css'\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nif (module.hot) {\n  module.hot.accept(\"./App\", () => {\n    ReactDOM.render(\n      <Provider store={store}>\n        <App />\n      </Provider>,\n      document.getElementById(\"root\")\n    );\n  });\n}\n","// ##############################\n// // // Chart variables\n// #############################\n\n// chartExample1 and chartExample2 options\nlet chart1_2_options = {\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n  tooltips: {\n    backgroundColor: \"#f5f5f5\",\n    titleFontColor: \"#333\",\n    bodyFontColor: \"#666\",\n    bodySpacing: 4,\n    xPadding: 12,\n    mode: \"nearest\",\n    intersect: 0,\n    position: \"nearest\"\n  },\n  responsive: true,\n  scales: {\n    yAxes: [\n      {\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(29,140,248,0.0)\",\n          zeroLineColor: \"transparent\"\n        },\n        ticks: {\n          suggestedMin: 60,\n          suggestedMax: 125,\n          padding: 20,\n          fontColor: \"#9a9a9a\"\n        }\n      }\n    ],\n    xAxes: [\n      {\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(29,140,248,0.1)\",\n          zeroLineColor: \"transparent\"\n        },\n        ticks: {\n          padding: 20,\n          fontColor: \"#9a9a9a\"\n        }\n      }\n    ]\n  }\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.jsx\n// #########################################\nlet chartExample1 = {\n  data1: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\n        \"JAN\",\n        \"FEB\",\n        \"MAR\",\n        \"APR\",\n        \"MAY\",\n        \"JUN\",\n        \"JUL\",\n        \"AUG\",\n        \"SEP\",\n        \"OCT\",\n        \"NOV\",\n        \"DEC\"\n      ],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100]\n        }\n      ]\n    };\n  },\n  data2: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\n        \"JAN\",\n        \"FEB\",\n        \"MAR\",\n        \"APR\",\n        \"MAY\",\n        \"JUN\",\n        \"JUL\",\n        \"AUG\",\n        \"SEP\",\n        \"OCT\",\n        \"NOV\",\n        \"DEC\"\n      ],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120]\n        }\n      ]\n    };\n  },\n  data3: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\n        \"JAN\",\n        \"FEB\",\n        \"MAR\",\n        \"APR\",\n        \"MAY\",\n        \"JUN\",\n        \"JUL\",\n        \"AUG\",\n        \"SEP\",\n        \"OCT\",\n        \"NOV\",\n        \"DEC\"\n      ],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130]\n        }\n      ]\n    };\n  },\n  options: chart1_2_options\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.jsx\n// #########################################\nlet chartExample2 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n      datasets: [\n        {\n          label: \"Data\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [80, 100, 70, 80, 120, 80]\n        }\n      ]\n    };\n  },\n  options: chart1_2_options\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.jsx\n// #########################################\nlet chartExample3 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(72,72,176,0.1)\");\n    gradientStroke.addColorStop(0.4, \"rgba(72,72,176,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(119,52,169,0)\"); //purple colors\n\n    return {\n      labels: [\"USA\", \"GER\", \"AUS\", \"UK\", \"RO\", \"BR\"],\n      datasets: [\n        {\n          label: \"Countries\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          hoverBackgroundColor: gradientStroke,\n          borderColor: \"#d048b6\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          data: [53, 20, 10, 80, 100, 45]\n        }\n      ]\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\"\n    },\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(225,78,202,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            suggestedMin: 60,\n            suggestedMax: 120,\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(225,78,202,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }\n      ]\n    }\n  }\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.jsx\n// #########################################\nconst chartExample4 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\n    gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); //green colors\n    gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); //green colors\n\n    return {\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\"],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#00d6b4\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#00d6b4\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#00d6b4\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [90, 27, 60, 12, 80]\n        }\n      ]\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\"\n    },\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(29,140,248,0.0)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            suggestedMin: 50,\n            suggestedMax: 125,\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(0,242,195,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }\n      ]\n    }\n  }\n};\n\nmodule.exports = {\n  chartExample1, // in src/views/Dashboard.jsx\n  chartExample2, // in src/views/Dashboard.jsx\n  chartExample3, // in src/views/Dashboard.jsx\n  chartExample4 // in src/views/Dashboard.jsx\n};\n"],"sourceRoot":""}